AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: 'Create application loadbalancer'

# --------------------------------------------- #
# Parameters
# --------------------------------------------- #
Parameters:
  ProjectName:
    Type: String

# --------------------------------------------- #
# Resources
# --------------------------------------------- #
Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets: [ 'Fn::ImportValue': !Sub '${ProjectName}-public-az-a-subnet', 'Fn::ImportValue': !Sub '${ProjectName}-public-az-b-subnet' ]
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup

  HttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        # !Subは使えなかった
        - TargetGroupArn: { "Fn::ImportValue": { "Fn::Sub": "${ProjectName}-target-group-arn" } }
          Type: forward
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  lisnerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: { "Fn::ImportValue": { "Fn::Sub": "${ProjectName}-target-group-arn" } }
      Conditions:
        - Field: path-pattern
          Values: ['/static/*']
      ListenerArn: !Ref HttpListener
      Priority: 10

#  SubListenerRule:
#    Type: AWS::ElasticLoadBalancingV2::ListenerRule
#    Properties:
#      Actions:
#        - Type: forward
#          TargetGroupArn: { "Fn::ImportValue": { "Fn::Sub": "${ProjectName}-target-group-arn" } }
#      Conditions:
#        - Field: path-pattern
#          Values: !Sub arn/*
#      ListenerArn: !Ref LoadBalancer
#      Priority: 10

  # --------------------------------------------- #
  # Security Group
  # --------------------------------------------- #
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId: { "Fn::ImportValue": { "Fn::Sub": "${ProjectName}-vpc-id" } }
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

# --------------------------------------------- #
# Outputs
# --------------------------------------------- #
Outputs:
  ApplicationLoadBalancerDNSName:
    Description: Application Load Balancer DNS Name
    Value: !GetAtt LoadBalancer.DNSName
  ApplicationLoadBalancerSecurityGroup:
    Description: Application Load Balancer Security Grout
    Value: !Ref LoadBalancerSecurityGroup
    Export:
      Name: load-balancer-security-group
